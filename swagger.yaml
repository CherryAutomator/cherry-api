swagger: "2.0"
info:
  version: "v1.0.0"
  title: "Cherry API"
schemes:
- "https"
- "http"
paths:
  /auth:
    post:
      tags:
      - "Authentication"
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema: 
          $ref: "#/definitions/AuthRequest"
      responses:
        "400":
          description: "The email or password are invalid"
          schema:
              $ref: "#/definitions/ApiResponse"
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
  /me/projects:
    get:
      tags:
      - "Projects"
      produces:
      - "application/json"
      parameters:
        - name: "amount"
          in: "query"
          type: "integer"
        - name: "page"
          in: "query"
          type: "integer"
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
  /projects:
    post:
      tags:
      - "Projects"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateProjectCommand"
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
  /projects/{id}:
    get:
      tags:
      - "Projects"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        type: "string"
        required: true
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
    put:
      tags:
      - "Projects"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        type: "string"
        required: true
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/EditProjectCommand"
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
    delete:
      tags:
      - "Projects"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        type: "string"
        required: true
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
  /projects/{projectId}/release-configurations:
    get:
      tags:
      - "Release Configurations"
      produces:
      - "application/json"
      parameters:
      - name: "projectId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Project not found"
  /release-configurations:
    post:
      tags:
      - "Release Configurations"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateReleaseConfigurationCommand"
      responses:
        "200":
          description: "Success"
          schema:
              $ref: "#/definitions/ApiResponse"
  /release-configurations/{id}:
    get:
      tags:
      - "Release Configurations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Release configuration not found"
    put:
      tags:
      - "Release Configurations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "body"
        in: "body"
        schema:
          $ref: "#/definitions/EditReleaseConfigurationCommand"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Release configuration not found"
    delete:
      tags:
      - "Release Configurations"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Release configuration not found"
  /users:
    post:
      tags:
      - "Users"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateUserCommand"
      responses:
        default:
          description: "successful operation"
definitions:
  CreateProjectCommand:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      color:
        type: "string"
      externalRepositoryId:
        type: "string"
    xml:
      name: "CreateProjectCommand"
  EditProjectCommand:
    type: "object"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      color:
        type: "string"
    xml:
      name: "EditProjectCommand"
  CreateReleaseConfigurationCommand:
    type: "object"
    properties:
        name: 
          type: "string"
        branchFrom: 
          type: "string"
        branchTo: 
          type: "string"
        projectId:
          type: "string"
    xml:
      name: "CreateReleaseConfigurationCommand"
  EditReleaseConfigurationCommand:
    type: "object"
    properties:
      name: 
        type: "string"
      branchFrom: 
        type: "string"
      branchTo: 
        type: "string"
    xml:
      name: "EditReleaseConfigurationCommand"
  AuthRequest:
    type: "object"
    properties:
      email:
        type: "string"
      name:
        type: "string"
    xml:
      name: "AuthRequest"
  CreateUserCommand:
    type: "object"
    properties:
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      password:
        type: string
    xml:
      name: "CreateUserCommand"
  ApiResponse:
    type: "object"
    properties:
      content:
        type: "object"
      message:
        type: "string"
    xml:
      name: "ApiResponse"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"